after_cor <- paste("7. Analyze what's left! Correlation between X and Y controlling for C: ",round(cor(df$X-df$mean_X,df$Y-df$mean_Y),3),sep='')
#Add step 2 in which X is demeaned, and 3 in which both X and Y are, and 4 which just changes label
dffull <- rbind(
#Step 1: Raw data only
df %>% mutate(mean_X=NA,mean_Y=NA,C=0,time=before_cor),
#Step 2: Raw data only
df %>% mutate(mean_X=NA,mean_Y=NA,time='2. Separate data by the values of C.'),
#Step 3: Add x-lines
df %>% mutate(mean_Y=NA,time='3. Figure out what differences in X are explained by C'),
#Step 4: X de-meaned
df %>% mutate(X = X - mean_X,mean_X=0,mean_Y=NA,time="4. Remove differences in X explained by C"),
#Step 5: Remove X lines, add Y
df %>% mutate(X = X - mean_X,mean_X=NA,time="5. Figure out what differences in Y are explained by C"),
#Step 6: Y de-meaned
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=0,time="6. Remove differences in Y explained by C"),
#Step 7: Raw demeaned data only
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=NA,time=after_cor))
p <- ggplot(dffull,aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)))+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)))+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = 'Inventing a Correlation Between X and Y by Controlling for Collider C \n{next_state}')+
transition_states(time,transition_length=c(1,12,32,12,32,12,12),state_length=c(160,125,100,75,100,75,160),wrap=FALSE)+
ease_aes('sine-in-out')+
exit_fade()+enter_fade()
animate(p,nframes=200)
library(tidyverse)
library(gganimate)
library(ggthemes)
#Probably try a few times until the raw correlation looks nice and low
df <- data.frame(X = rnorm(200)+1,Y=rnorm(200)+1,time="1") %>%
mutate(C = as.integer(X+Y+rnorm(200)/2>2)) %>%
group_by(C) %>%
mutate(mean_X=mean(X),mean_Y=mean(Y)) %>%
ungroup()
cor(df$X,df$Y)
#Calculate correlations
before_cor <- paste("1. Start with raw data, ignoring C. Correlation between X and Y: ",round(cor(df$X,df$Y),3),sep='')
after_cor <- paste("7. Analyze what's left! Correlation between X and Y controlling for C: ",round(cor(df$X-df$mean_X,df$Y-df$mean_Y),3),sep='')
#Add step 2 in which X is demeaned, and 3 in which both X and Y are, and 4 which just changes label
dffull <- rbind(
#Step 1: Raw data only
df %>% mutate(mean_X=NA,mean_Y=NA,C=0,time=before_cor),
#Step 2: Raw data only
df %>% mutate(mean_X=NA,mean_Y=NA,time='2. Separate data by the values of C.'),
#Step 3: Add x-lines
df %>% mutate(mean_Y=NA,time='3. Figure out what differences in X are explained by C'),
#Step 4: X de-meaned
df %>% mutate(X = X - mean_X,mean_X=0,mean_Y=NA,time="4. Remove differences in X explained by C"),
#Step 5: Remove X lines, add Y
df %>% mutate(X = X - mean_X,mean_X=NA,time="5. Figure out what differences in Y are explained by C"),
#Step 6: Y de-meaned
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=0,time="6. Remove differences in Y explained by C"),
#Step 7: Raw demeaned data only
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=NA,time=after_cor))
p <- ggplot(dffull,aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)))+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)))+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = 'Inventing a Correlation Between X and Y by Controlling for Collider C \n{next_state}')+
transition_states(time,transition_length=c(1,12,32,12,32,12,12),state_length=c(160,125,100,75,100,75,160),wrap=FALSE)+
ease_aes('sine-in-out')+
exit_fade()+enter_fade()
animate(p,nframes=200)
theme_green <- function(){
theme(
plot.background =
element_rect(fill = "green"),
panel.background =
element_rect(fill = "lightgreen")
)
}
library("forcats", lib.loc="~/R/win-library/3.5")
View(df)
View(df)
install.packages("caret")
sum(c(30, NA, 20))
rm(list = ls())
#load package
library(tidyverse)
library(tidyr)
library(broom)
library(purrr)
#setworking directory and load the data
setwd("C:/stata assignments/complete/interview questions/laterite data/Laterite Analytical Assessment")
data <- read_csv("laterite_education_data.csv", col_names = T,cols(
X1 = col_double(),
province = col_factor(),
district = col_factor(),
ur2012 = col_factor(),
weight = col_double(),
Consumption = col_double(),
s1q1 = col_factor(),
s1q3y = col_double(),
s1q13 = col_factor(),
s1q14 = col_factor(),
s3q4 = col_factor(),
s4aq6a = col_character(),
s4aq6b = col_character(),
s4aq8 = col_factor(),
s4aq9 = col_factor(),
s4aq11h = col_factor(),
s4aq12 = col_factor(),
s4aq14 = col_double(),
s4aq15 = col_factor(),
s4aq17 = col_factor(),
s4bq3 = col_factor(),
s4bq4 = col_factor(),
s4bq5 = col_factor(),
s6aq2 = col_factor()
))
## rename the variables
names(data)
r_data <- data %>% rename(Sex = s1q1,
Age=s1q3y,
region_class = ur2012,
Father_alive=s1q13,
Mother_alive = s1q14,
health_prob=s3q4,
Grade_2012=s4aq6a ,
Grade_2013=s4aq6b ,
sch_attended_prev_yr=s4aq8  ,
prob_in_sch=s4aq9,
edu_expenses=s4aq11h,
paid_edu_expenses_year_end=s4aq12 ,
sch_days_missed=s4aq14  ,
why_not_attending_sch=s4aq15 ,
why_leave_sch=s4aq17 ,
can_read=s4bq3 ,
can_write=s4bq4,
can_calculate=s4bq5 ,
farm_work=s6aq2  )
## Define the missing values as NAs then remove them from the two variables.
r_data <- r_data %>% na_if("") %>% filter(!is.na(Grade_2012),!is.na(Grade_2013))
#create dummy variables, grade repeat and dropout outcome
r_data$repeated <- factor(r_data$Grade_2012==r_data$Grade_2013)
r_data$dropout <- factor(!(r_data$Grade_2012%in%c("Not in class"))&r_data$Grade_2013%in%c("Not in class"))
## how grade repetition varies by grade in Primary Education
comparis <- r_data %>% filter(!(Grade_2012%in%c("Not in class")))
table(r_data$Grade_2012,r_data$repeated)->comparison_repetition_in_classes_2012
prop.table(comparison_repetition_in_classes_2012,1)*100
ggplot(comparis, aes(x=repeated))+ geom_bar(position = "dodge")+facet_wrap(~Grade_2012)
ggplot(comparis, aes(x=Grade_2012,fill =repeated))+ geom_bar(position = "stack")
## dropout by gender
table(r_data$dropout,r_data$Sex)-> dropout_gender
prop.table(dropout_gender,1)*100
t.test(dropout_gender[1,],dropout_gender[2,])
## variables contributing to repeat in primary
##our response variable would be repeating which is binary
## we use a linear model group by whether urban or rural
#coefficients_of_vars <- r_data %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
# mutate(p.adjusted = p.adjust(p.value)) %>%
# filter(p.adjusted < .05)
# Sort for the countries increasing most quickly
#filtered_countries %>%
#  arrange(desc(estimate))
r_data$repeated <- r_data %>% if_else(repeated=="TRUE",1L,0L)
r_data$repeated <- r_data %>% if_else(repeated==TRUE,1L,0L)
levels(r_data)
levels(r_data$repeated)
r_data$repeated <- r_data %>% if_else(repeated=="TRUE","1","0")
r_data %>% mutate(case_when(repeated=TRUE~1L,repeated=FALSE~0L))
levels(r_data$repeated)
rdata <- r_data %>% mutate(case_when(repeated=TRUE~1L,repeated=FALSE~0L))
levels(rdata$repeated)
?case_when
rdata <- r_data %>% mutate(case_when(repeated==TRUE~1L,repeated==FALSE~0L))
levels(rdata$repeated)
rdata <- r_data %>% mutate(repeated=case_when(repeated==TRUE~1L,repeated==FALSE~0L))
levels(rdata$repeated)
remove(rdata)
recode_factor(rdata$repeated, "TRUE"=`1`)
recode_factor(rdata$repeated, 1L=`TRUE`, 0L=`FALSE`)
?recode
recode(rdata$repeated, TRUE=1L,FALSE=2L)
rdara <- r_data %>% mutate(repeated = ifelse(repeated %in% c('TRUE'), 1L, 0L))
class(rdara$repeated)
table(rdara)
table(rdara$repeated)
## variables contributing to repeat in primary
##our response variable would be repeating which is binary
## we use a linear model
r_dara <- r_data %>% mutate(repeated = ifelse(repeated %in% c('TRUE'), 1L, 0L))
model <- lm(repeated~weight,r_dara)
summary(model)
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
View(coefficients_of_vars)
model <- lm(repeated~.,r_dara)
str(r_dara)
r_dara$Grade_2012 <- factor(r_dara$Grade_2012)
r_dara$Grade_2013 <- factor(r_dara$Grade_2013)
model <- lm(repeated~.,r_dara)
names(r_dara)
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+edu_expenses+paid_edu_expenses_year_end, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+edu_expenses, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yrh+edu_expenseshealth_prob, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+edu_expenseshealth_prob, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+edu_expenseshealth_prob, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+edu_expenses+health_prob, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+sch_attended_prev_yr+prob_in_sch+edu_expenseshealth_prob, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+edu_expenses, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+sch_attended_prev_yr+prob_in_sch+edu_expenses, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+edu_expenses, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
View(coefficients_of_vars)
levels(r_dara$edu_expenses)
rm(list = ls())
#load package
library(tidyverse)
library(tidyr)
library(broom)
library(purrr)
#setworking directory and load the data
setwd("C:/stata assignments/complete/interview questions/laterite data/Laterite Analytical Assessment")
data <- read_csv("laterite_education_data.csv", col_names = T,cols(
X1 = col_double(),
province = col_factor(),
district = col_factor(),
ur2012 = col_factor(),
weight = col_double(),
Consumption = col_double(),
s1q1 = col_factor(),
s1q3y = col_double(),
s1q13 = col_factor(),
s1q14 = col_factor(),
s3q4 = col_factor(),
s4aq6a = col_character(),
s4aq6b = col_character(),
s4aq8 = col_factor(),
s4aq9 = col_factor(),
s4aq11h = col_double(),
s4aq12 = col_factor(),
s4aq14 = col_double(),
s4aq15 = col_factor(),
s4aq17 = col_factor(),
s4bq3 = col_factor(),
s4bq4 = col_factor(),
s4bq5 = col_factor(),
s6aq2 = col_factor()
))
## rename the variables
names(data)
r_data <- data %>% rename(Sex = s1q1,
Age=s1q3y,
region_class = ur2012,
Father_alive=s1q13,
Mother_alive = s1q14,
health_prob=s3q4,
Grade_2012=s4aq6a ,
Grade_2013=s4aq6b ,
sch_attended_prev_yr=s4aq8  ,
prob_in_sch=s4aq9,
edu_expenses=s4aq11h,
paid_edu_expenses_year_end=s4aq12 ,
sch_days_missed=s4aq14  ,
why_not_attending_sch=s4aq15 ,
why_leave_sch=s4aq17 ,
can_read=s4bq3 ,
can_write=s4bq4,
can_calculate=s4bq5 ,
farm_work=s6aq2  )
## Define the missing values as NAs then remove them from the two variables.
r_data <- r_data %>% na_if("") %>% filter(!is.na(Grade_2012),!is.na(Grade_2013))
#create dummy variables, grade repeat and dropout outcome
r_data$repeated <- factor(r_data$Grade_2012==r_data$Grade_2013)
r_data$dropout <- factor(!(r_data$Grade_2012%in%c("Not in class"))&r_data$Grade_2013%in%c("Not in class"))
## how grade repetition varies by grade in Primary Education
comparis <- r_data %>% filter(!(Grade_2012%in%c("Not in class")))
table(r_data$Grade_2012,r_data$repeated)->comparison_repetition_in_classes_2012
prop.table(comparison_repetition_in_classes_2012,1)*100
ggplot(comparis, aes(x=repeated))+ geom_bar(position = "dodge")+facet_wrap(~Grade_2012)
ggplot(comparis, aes(x=Grade_2012,fill =repeated))+ geom_bar(position = "stack")
## dropout by gender
table(r_data$dropout,r_data$Sex)-> dropout_gender
prop.table(dropout_gender,1)*100
t.test(dropout_gender[1,],dropout_gender[2,])
## variables contributing to repeat in primary
##our response variable would be repeating which is binary
## we use a linear model
r_dara <- r_data %>% mutate(repeated = ifelse(repeated %in% c('TRUE'), 1L, 0L))
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
#mutate(p.adjusted = p.adjust(p.value)) %>%
#filter(p.adjusted < .05)
# Sort for the countries increasing most quickly
#filtered_countries %>%  arrange(desc(estimate))
str(r_dara)
names(r_dara)
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
View(coefficients_of_vars)
model <- lm(repeated~.,r_dara)
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+edu_expenses, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
names(r_dara)
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+sch_days_missed+why_not_attending_sch+why_leave_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+sch_days_missed+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+sch_days_missed+why_not_attending_sch+can_read+can_write+can_calculate+farm_work, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+sch_days_missed+why_not_attending_sch+can_read+can_write+can_calculate, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+sch_days_missed+why_not_attending_sch+farm_work, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+sch_days_missed+can_read+can_write+can_calculate+farm_work, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_+can_read+can_write+can_calculate+farm_work, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch+can_read+can_write+can_calculate+farm_work, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch+can_read, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch+can_read+can_write, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch+can_read+can_calculate+farm_work, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch+can_read+farm_work, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch+farm_work, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
unique(r_data$repeated)
unique(r_data$can_read)
## variables contributing to repeat in primary
##our response variable would be repeating which is binary
## we use a linear model
r_dara <- r_data %>% mutate(repeated = ifelse(repeated %in% c('TRUE'), 1L, 0L))
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
View(coefficients_of_vars)
View(r_dara)
coefficients_of_vars <- r_dara %>%  group_by(province,district,region_class,Sex) %>% nest(-province,district,region_class,Sex) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="intercept") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(province,district,region_class,Sex) %>% nest(-province,district,region_class,Sex) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="intercept") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(province,district,region_class,Sex) %>% nest(-c(province,district,region_class,Sex)) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="intercept") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
View(coefficients_of_vars)
coefficients_of_vars <- r_dara %>%  group_by(province,district,region_class,Sex) %>% nest(-c(province,district,region_class,Sex)) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="(intercept)") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term !="(intercept)") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
View(coefficients_of_vars)
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) #%>% filter(term =="years") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="(intercept)") #%>% select(estimate) %>% rename(expenses = "estimate" )filter(term == "year") %>%
View(coefficients_of_vars)
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="(intercept)") %>% select(-statistic) %>% #rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="(intercept)") %>% select(-statistic) %>% #rename(expenses = "estimate" )filter(term == "year") %>%
)
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="(intercept)") %>% select(-statistic) #%>% rename(expenses = "estimate" )filter(term == "year") %>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="(intercept)") %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) #%>%
View(coefficients_of_vars)
coefficients_of_vars1 <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(term !="(intercept)") %>% select(-statistic) #%>% rename(expenses = "estimate" )filter(term == "year") %>%
View(coefficients_of_vars)
View(coefficients_of_vars1)
remove(coefficients_of_vars1)
View(coefficients_of_vars)
e
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) #%>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) %>% filter(p.adjusted < .05)
coefficients_of_vars_plus_pvalues <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) %>% filter(p.adjusted < .05)
coefficients_of_vars_plus_pvalues <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) #%>%
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) %>% filter(p.adjusted < .05)
View(coefficients_of_vars_plus_pvalues)
View(coefficients_of_vars)
write.csv(coefficients_of_vars_plus_pvalues,"all_p.values.csv", row.names = F)
write.csv(coefficients_of_vars,"significant_p.values < 0.5.csv", row.names = F)
write.csv(coefficients_of_vars,"significant_p.values at 0.5.csv", row.names = F)
# Sort for the classes with the highest probability of repetition
coefficients_of_vars %>%  filter(region_clas=="Rural") %>% arrange(desc(estimate))
# Sort for the classes with the highest probability of repetition
coefficients_of_vars %>%  filter(region_class=="Rural") %>% arrange(desc(estimate))
# Sort for the variables the highest causes of repetition in class
coefficients_of_vars %>%  filter(region_class=="Rural",term = "intercept") %>% arrange(desc(estimate))
# Sort for the variables the highest causes of repetition in class
coefficients_of_vars %>%  filter(region_class=="Rural",term == "intercept") %>% arrange(desc(estimate))
# Sort for the variables the highest causes of repetition in class
coefficients_of_vars %>%  filter(region_class=="Rural",term != "intercept") %>% arrange(desc(estimate))
# Sort for the variables the highest causes of repetition in class
coefficients_of_vars %>%  filter(region_class=="Rural",term != "Intercept") %>% arrange(desc(estimate))
# Sort for the variables the highest causes of repetition in class
coefficients_of_vars %>%  filter(region_class=="Rural",term != "(Intercept)") %>% arrange(desc(estimate))
unique(r_dara$prob_in_sch)
# Sort for the variables the highest causes of repetition in class
causes <- coefficients_of_vars %>%  filter(region_class=="Rural",term != "(Intercept)") %>% arrange(desc(estimate))
write.csv(causes,"arranged causes of repetition in rural schools.csv", row.names = F)
causes2 <- coefficients_of_vars %>%  filter(region_class=="Urban",term != "(Intercept)") %>% arrange(desc(estimate))
write.csv(causes2,"arranged causes of repetition in urban schools.csv", row.names = F)
ggplot(comparis, aes(x=repeated))+ geom_bar(position = "identity")+facet_wrap(~Grade_2012)
ggplot(comparis, aes(x=Grade_2012,fill =repeated))+ geom_bar(position = "fill")
View(coefficients_of_vars_plus_pvalues)
View(coefficients_of_vars)
coefficients_of_varsX <- r_dara ) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~province+district+weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) %>% filter(p.adjusted < .05)
coefficients_of_varsX <- r_dara  %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~province+district+weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) %>% filter(p.adjusted < .05)
View(coefficients_of_vars)
View(coefficients_of_varsX)
summary(data)
cor.test(data)
3000000/12
500000/12
119000*100
119000*100/2
119000*100/2/12
remove(coefficients_of_varsX)
View(coefficients_of_vars)
#model
mod <- lm(repeated~Grade_2012+Grade_2013, r_dara)
augmented_mod <- augment(mod)
glimpse(augmented_mod)
View(r_dara)
data_space <- ggplot(coefficients_of_vars, aes(x =Grade_2012 , y = repeated, color = Grade_2013)) +
geom_point()
data_space
data_space <- ggplot(augmented_mod, aes(x =Grade_2012 , y = repeated, color = Grade_2013)) +
geom_point()
data_space
data_space <- ggplot(augmented_mod, aes( x = repeated, color = Grade_2013)) +
geom_bar()
data_space
r_dara <- r_data %>% mutate(dropout = ifelse(repeated %in% c('TRUE'), 1L, 0L))
coefficients_of_vars_for _drop_out <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(dropout~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) %>% filter(p.adjusted < .05)
coefficients_of_vars_for_drop_out <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(dropout~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) %>% filter(p.adjusted < .05)
View(coefficients_of_vars_plus_pvalues)
View(augmented_mod)
View(causes)
View(coefficients_of_vars_for_drop_out)
m <- lm(dropout~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch,r_data)
m <- lm(dropout~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch,r_dara)
par(mfrow = c(2, 2))
plot(m)
table(r_data$province)
table(r_data$province)->tabb
prop.table(tabb)
table(r_data$province)->tabb
prop.table(tabb)*100
mean(r_data$province)
mean(r_data$province,na.rm = T)
prop.table(tabb)*100
table(r_data$province)->tabb
prop.table(tabb)*100 %>% knitr::kable()
prop.table(tabb)*100->tabb1
tabb1%>% knitr::kable()
View(r_data)
table(r_data$province)->tabb
prop.table(tabb)*100->tabb1
tabb1%>% knitr::kable()
ggplot(r_data,aes(x= provinces))+geom_bar()
table(r_data$province)->tabb
prop.table(tabb)*100->tabb1
tabb1%>% knitr::kable()
ggplot(r_data,aes(x= province))+geom_bar()
table(r_data$province)->tabb
prop.table(tabb)*100->tabb1
tabb1%>% knitr::kable()
ggplot(r_data,aes(x= desc(province)))+geom_bar()
table(r_data$district)->tab2
prop.table(tabb)*100->tab22
tab22%>% knitr::kable()
table(r_data$district)->tab2
prop.table(tab2)*100->tab22
tab22%>% knitr::kable()
table(r_data$district)
tab22%>% knitr::kable()
table(r_data$district)->tab2
tab2%>% knitr::kable()
names(r_data$district)
levels(r_data$district)
table(r_data$district)->tab2
tab2%>% knitr::kable()
View(r_data)
table(r_data$region_class)
table(r_data$region_class) <- tadw
table(r_data$region_class) <- tadw
table(r_data$region_class) -> tadw
prop.table(tadw)
prop.table(tadw)*100
table(r_data$region_class) -> tadw
prop.table(tadw)*100-> tabww
tabww %>% knitr::kable()
table(r_data$Sex)
table(r_data$Sex) -> tadyy
prop.table(tadyy)*100
## how grade repetition varies by grade in Primary Education
comparis <- r_data %>% filter(!(Grade_2012%in%c("Not in class")))
table(r_data$Grade_2012,r_data$repeated)->comparison_repetition_in_classes_2012
prop.table(comparison_repetition_in_classes_2012,1)*100
## how grade repetition varies by grade in Primary Education
comparis <- r_data %>% filter(!(Grade_2012%in%c("Not in class")))
table(comparis$Grade_2012,comparis$repeated)->comparison_repetition_in_classes_2012
prop.table(comparison_repetition_in_classes_2012,1)*100
prop.table(comparison_repetition_in_classes_2012,1)*100->tabwew
tabwew %>% knitr::kable()
ggplot(comparis, aes(x=repeated))+ geom_bar(position = "dodge")+facet_wrap(~Grade_2012)
tabwew %>% knitr::kable()
table(r_data$Grade_2012)
## dropout by gender
table(r_data$dropout,r_data$Sex)-> dropout_gender
prop.table(dropout_gender,1)*100
t.test(dropout_gender[1,],dropout_gender[2,])
## dropout by gender
table(r_data$Sex,r_data$dropout)-> dropout_gender
prop.table(dropout_gender,1)*100 -> drop_prop
drop_prop %>% knitr::kable()
t.test(dropout_gender[1,],dropout_gender[2,])
drop_prop
var.test(dropout_gender[1,],dropout_gender[2,])
var.test(dropout_gender[2,],dropout_gender[1,])
t.test(dropout_gender[1,],dropout_gender[2,], var.equal = T)
## variables contributing to repeat in primary
##our response variable would be repeating which is binary, so we recode into 1 if repeated is true and 0 if otherwise.
r_dara <- r_data %>% mutate(repeated = ifelse(repeated %in% c('TRUE'), 1L, 0L))
coefficients_of_vars_plus_pvalues <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value))
## Get the significant variables i.e that have p-value < 0.5
coefficients_of_vars <- r_dara %>%  group_by(region_class) %>% nest(-region_class) %>% mutate(models = map(data, ~lm(repeated~weight+Consumption+Sex+Age+Father_alive+Mother_alive+health_prob+sch_attended_prev_yr+prob_in_sch+Grade_2013+Grade_2012+paid_edu_expenses_year_end+why_not_attending_sch, .))) %>% mutate(tidied = map(models, tidy)) %>% unnest(tidied) %>% filter(region_class %in%c("Rural","Urban")) %>% select(-statistic) %>% mutate(p.adjusted = p.adjust(p.value)) %>% filter(p.adjusted < .05)
# Sort for the variables the highest causes of repetition in class
causes <- coefficients_of_vars %>%  filter(region_class=="Rural",term != "(Intercept)") %>% arrange(desc(estimate))
causes %>% knitr::kable()
causes
# Sort for the variables the highest causes of repetition in class
causes2 <- coefficients_of_vars %>%  filter(region_class=="Urban",term != "(Intercept)") %>% arrange(desc(estimate))
causes2 %>% knitr::kable()
causes2
